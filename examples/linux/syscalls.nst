# Only include this file on Linux for x86_64. 
# This will most likely not work on any other kernel.

# Taken from https://x64.syscall.sh/

include {
  "linux/filesystem.nst" # for umode_t
}

# On Linux, system calls are done through the interrupt `80h`.
syscall -> 0x80

# Terminate the calling process.
#
# Input:
#   - RAX = 0x3C (internal)
#   - RDI : s32 = exit code
#
# Output:
#   - RAX : s32 = exit status
syscall 60:  (Ξ; Γ; χ, %r0: !, %r5: s32; σ; ε) 
          -> (Ξ; Γ; χ, %r0: !; σ; ε)
#            ^^^^^^^^^^^^^^^^^^^^^^^
# Technically speaking, this is a `noreturn` but we can't model these.
          = mv 0x3C, %r0

# Open and possibly create a file.
#
# Input:
#   - RAX = 0x02 (internal)
#   - RDI : *char = file path 
#   - RSI : s32 = flags 
#   - RDX : umode_t = opening mode
#
# Output:
#   - RAX : fd = file descriptor
syscall 2:  (Ξ; Γ; χ, %r5: *s8, %r4: s32, %r3: umode_t, %r0: !; σ; ε)
         -> (Ξ; Γ; χ, %r5: *s8, %r4: s32, %r3: umode_t, %r0: fd; σ; ε) 
         = mv 0x02, %r0
